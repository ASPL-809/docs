{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{domain}.zymmr.com",
      "variables": {
        "domain": {
          "default": "Organization"
        }
      }
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/api/resource/Absence": {
      "get": {
        "description": "returns a list of object with type Absence",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "full_name": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "comment": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Absence/{Absence}": {
      "get": {
        "description": "returns a list of object with type Absence",
        "parameters": [
          {
            "name": "Absence",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Absence",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "full_name": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "comment": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Absence",
        "parameters": [
          {
            "name": "Absence",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Allocation": {
      "get": {
        "description": "returns a list of object with type Allocation",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "user": { "type": "string" },
                  "date": { "type": "string" },
                  "capacity": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Allocation/{Allocation}": {
      "get": {
        "description": "returns a list of object with type Allocation",
        "parameters": [
          {
            "name": "Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "user": { "type": "string" },
                  "date": { "type": "string" },
                  "capacity": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Allocation",
        "parameters": [
          {
            "name": "Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Bitbucket%20Configuration": {
      "get": {
        "description": "returns a list of object with type Bitbucket Configuration",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repository_name": { "type": "string" },
                  "repository_slug": { "type": "string" },
                  "repository_workspace": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Bitbucket%20Configuration/{Bitbucket_Configuration}": {
      "get": {
        "description": "returns a list of object with type Bitbucket Configuration",
        "parameters": [
          {
            "name": "Bitbucket_Configuration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Bitbucket_Configuration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repository_name": { "type": "string" },
                  "repository_slug": { "type": "string" },
                  "repository_workspace": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Bitbucket Configuration",
        "parameters": [
          {
            "name": "Bitbucket_Configuration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Board%20Settings": {
      "get": {
        "description": "returns a list of object with type Board Settings",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fields": { "type": "string" },
                  "board": { "type": "string" },
                  "swimlane": { "type": "string" },
                  "workflow_state_map": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Board%20Settings/{Board_Settings}": {
      "get": {
        "description": "returns a list of object with type Board Settings",
        "parameters": [
          {
            "name": "Board_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Board_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fields": { "type": "string" },
                  "board": { "type": "string" },
                  "swimlane": { "type": "string" },
                  "workflow_state_map": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Board Settings",
        "parameters": [
          {
            "name": "Board_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Change%20Log": {
      "get": {
        "description": "returns a list of object with type Change Log",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "doc_type": { "type": "string" },
                  "doc_name": { "type": "string" },
                  "sprint": { "type": "string" },
                  "date": { "type": "string" },
                  "status": { "type": "string" },
                  "key": { "type": "string" },
                  "field_name": { "type": "string" },
                  "old": { "type": "string" },
                  "new": { "type": "string" },
                  "modified_json": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Change%20Log/{Change_Log}": {
      "get": {
        "description": "returns a list of object with type Change Log",
        "parameters": [
          {
            "name": "Change_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Change_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "doc_type": { "type": "string" },
                  "doc_name": { "type": "string" },
                  "sprint": { "type": "string" },
                  "date": { "type": "string" },
                  "status": { "type": "string" },
                  "key": { "type": "string" },
                  "field_name": { "type": "string" },
                  "old": { "type": "string" },
                  "new": { "type": "string" },
                  "modified_json": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Change Log",
        "parameters": [
          {
            "name": "Change_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Custom%20Field%20Context": {
      "get": {
        "description": "returns a list of object with type Custom Field Context",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "context": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Custom%20Field%20Context/{Custom_Field_Context}": {
      "get": {
        "description": "returns a list of object with type Custom Field Context",
        "parameters": [
          {
            "name": "Custom_Field_Context",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Custom_Field_Context",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field": { "type": "string" },
                  "context": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Custom Field Context",
        "parameters": [
          {
            "name": "Custom_Field_Context",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Dashboard%20Category": {
      "get": {
        "description": "returns a list of object with type Dashboard Category",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "color": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Dashboard%20Category/{Dashboard_Category}": {
      "get": {
        "description": "returns a list of object with type Dashboard Category",
        "parameters": [
          {
            "name": "Dashboard_Category",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Dashboard_Category",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "color": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Dashboard Category",
        "parameters": [
          {
            "name": "Dashboard_Category",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Data%20Importer": {
      "get": {
        "description": "returns a list of object with type Data Importer",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "file_path": { "type": "string" },
                  "document_type": { "type": "string" },
                  "import_type": { "type": "string" },
                  "eta": { "type": "string" },
                  "current_idx": { "type": "string" },
                  "total_payload_count": { "type": "string" },
                  "column_mapping": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Data%20Importer/{Data_Importer}": {
      "get": {
        "description": "returns a list of object with type Data Importer",
        "parameters": [
          {
            "name": "Data_Importer",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Data_Importer",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "file_path": { "type": "string" },
                  "document_type": { "type": "string" },
                  "import_type": { "type": "string" },
                  "eta": { "type": "string" },
                  "current_idx": { "type": "string" },
                  "total_payload_count": { "type": "string" },
                  "column_mapping": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Data Importer",
        "parameters": [
          {
            "name": "Data_Importer",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Feature%20Flag": {
      "get": {
        "description": "returns a list of object with type Feature Flag",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "route": { "type": "string" },
                  "tag": { "type": "string" },
                  "class": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Feature%20Flag/{Feature_Flag}": {
      "get": {
        "description": "returns a list of object with type Feature Flag",
        "parameters": [
          {
            "name": "Feature_Flag",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Feature_Flag",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "route": { "type": "string" },
                  "tag": { "type": "string" },
                  "class": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Feature Flag",
        "parameters": [
          {
            "name": "Feature_Flag",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Gantt%20Color%20Coding": {
      "get": {
        "description": "returns a list of object with type Gantt Color Coding",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "gantt_color_picker": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Gantt%20Color%20Coding/{Gantt_Color_Coding}": {
      "get": {
        "description": "returns a list of object with type Gantt Color Coding",
        "parameters": [
          {
            "name": "Gantt_Color_Coding",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Gantt_Color_Coding",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "gantt_color_picker": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Gantt Color Coding",
        "parameters": [
          {
            "name": "Gantt_Color_Coding",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Application": {
      "get": {
        "description": "returns a list of object with type Github Application",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": { "type": "string" },
                  "client_secret": { "type": "string" },
                  "access_token": { "type": "string" },
                  "refresh_token": { "type": "string" },
                  "integrated": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Application/{Github_Application}": {
      "get": {
        "description": "returns a list of object with type Github Application",
        "parameters": [
          {
            "name": "Github_Application",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Github_Application",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": { "type": "string" },
                  "client_secret": { "type": "string" },
                  "access_token": { "type": "string" },
                  "refresh_token": { "type": "string" },
                  "integrated": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Github Application",
        "parameters": [
          {
            "name": "Github_Application",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Linked%20Repository": {
      "get": {
        "description": "returns a list of object with type Github Linked Repository",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_name": { "type": "string" },
                  "organization": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Linked%20Repository/{Github_Linked_Repository}": {
      "get": {
        "description": "returns a list of object with type Github Linked Repository",
        "parameters": [
          {
            "name": "Github_Linked_Repository",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Github_Linked_Repository",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_name": { "type": "string" },
                  "organization": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Github Linked Repository",
        "parameters": [
          {
            "name": "Github_Linked_Repository",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Organization": {
      "get": {
        "description": "returns a list of object with type Github Organization",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "org_name": { "type": "string" },
                  "github_application": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Github%20Organization/{Github_Organization}": {
      "get": {
        "description": "returns a list of object with type Github Organization",
        "parameters": [
          {
            "name": "Github_Organization",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Github_Organization",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "org_name": { "type": "string" },
                  "github_application": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Github Organization",
        "parameters": [
          {
            "name": "Github_Organization",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Integration": {
      "get": {
        "description": "returns a list of object with type Integration",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "client_id": { "type": "string" },
                  "client_secret": { "type": "string" },
                  "access_token": { "type": "string" },
                  "refresh_token": { "type": "string" },
                  "integrated": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Integration/{Integration}": {
      "get": {
        "description": "returns a list of object with type Integration",
        "parameters": [
          {
            "name": "Integration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Integration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "client_id": { "type": "string" },
                  "client_secret": { "type": "string" },
                  "access_token": { "type": "string" },
                  "refresh_token": { "type": "string" },
                  "integrated": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Integration",
        "parameters": [
          {
            "name": "Integration",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Issue%20Type%20Scheme": {
      "get": {
        "description": "returns a list of object with type Issue Type Scheme",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "mapping": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Issue%20Type%20Scheme/{Issue_Type_Scheme}": {
      "get": {
        "description": "returns a list of object with type Issue Type Scheme",
        "parameters": [
          {
            "name": "Issue_Type_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Issue_Type_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "mapping": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Issue Type Scheme",
        "parameters": [
          {
            "name": "Issue_Type_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Licensing": {
      "get": {
        "description": "returns a list of object with type Licensing",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "license_details": { "type": "string" },
                  "decrypted_message": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Licensing/{Licensing}": {
      "get": {
        "description": "returns a list of object with type Licensing",
        "parameters": [
          {
            "name": "Licensing",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Licensing",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "license_details": { "type": "string" },
                  "decrypted_message": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Licensing",
        "parameters": [
          {
            "name": "Licensing",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Link%20Type": {
      "get": {
        "description": "returns a list of object with type Link Type",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "inward": { "type": "string" },
                  "outward": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Link%20Type/{Link_Type}": {
      "get": {
        "description": "returns a list of object with type Link Type",
        "parameters": [
          {
            "name": "Link_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Link_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "inward": { "type": "string" },
                  "outward": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Link Type",
        "parameters": [
          {
            "name": "Link_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Look%20and%20Feel": {
      "get": {
        "description": "returns a list of object with type Look and Feel",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "logo": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Look%20and%20Feel/{Look_and_Feel}": {
      "get": {
        "description": "returns a list of object with type Look and Feel",
        "parameters": [
          {
            "name": "Look_and_Feel",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Look_and_Feel",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "logo": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Look and Feel",
        "parameters": [
          {
            "name": "Look_and_Feel",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Milestones": {
      "get": {
        "description": "returns a list of object with type Milestones",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "project": { "type": "string" },
                  "from": { "type": "string" },
                  "to": { "type": "string" },
                  "mtype": { "type": "string" },
                  "owner_": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Milestones/{Milestones}": {
      "get": {
        "description": "returns a list of object with type Milestones",
        "parameters": [
          {
            "name": "Milestones",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Milestones",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "project": { "type": "string" },
                  "from": { "type": "string" },
                  "to": { "type": "string" },
                  "mtype": { "type": "string" },
                  "owner_": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Milestones",
        "parameters": [
          {
            "name": "Milestones",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Modules": {
      "get": {
        "description": "returns a list of object with type Modules",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "module_lead": { "type": "string" },
                  "project": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Modules/{Modules}": {
      "get": {
        "description": "returns a list of object with type Modules",
        "parameters": [
          {
            "name": "Modules",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Modules",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "module_lead": { "type": "string" },
                  "project": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Modules",
        "parameters": [
          {
            "name": "Modules",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Movement%20Log": {
      "get": {
        "description": "returns a list of object with type Movement Log",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_project": { "type": "string" },
                  "from_key": { "type": "string" },
                  "to_project": { "type": "string" },
                  "to_key": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Movement%20Log/{Movement_Log}": {
      "get": {
        "description": "returns a list of object with type Movement Log",
        "parameters": [
          {
            "name": "Movement_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Movement_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_project": { "type": "string" },
                  "from_key": { "type": "string" },
                  "to_project": { "type": "string" },
                  "to_key": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Movement Log",
        "parameters": [
          {
            "name": "Movement_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission": {
      "get": {
        "description": "returns a list of object with type Permission",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "role": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission/{Permission}": {
      "get": {
        "description": "returns a list of object with type Permission",
        "parameters": [
          {
            "name": "Permission",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Permission",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "role": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Permission",
        "parameters": [
          {
            "name": "Permission",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission%20Role%20Map": {
      "get": {
        "description": "returns a list of object with type Permission Role Map",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permission": { "type": "string" },
                  "roles": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission%20Role%20Map/{Permission_Role_Map}": {
      "get": {
        "description": "returns a list of object with type Permission Role Map",
        "parameters": [
          {
            "name": "Permission_Role_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Permission_Role_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permission": { "type": "string" },
                  "roles": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Permission Role Map",
        "parameters": [
          {
            "name": "Permission_Role_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission%20Scheme": {
      "get": {
        "description": "returns a list of object with type Permission Scheme",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "assignments": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Permission%20Scheme/{Permission_Scheme}": {
      "get": {
        "description": "returns a list of object with type Permission Scheme",
        "parameters": [
          {
            "name": "Permission_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Permission_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "assignments": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Permission Scheme",
        "parameters": [
          {
            "name": "Permission_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Priority": {
      "get": {
        "description": "returns a list of object with type Priority",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "icon": { "type": "string" },
                  "color": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Priority/{Priority}": {
      "get": {
        "description": "returns a list of object with type Priority",
        "parameters": [
          {
            "name": "Priority",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Priority",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "icon": { "type": "string" },
                  "color": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Priority",
        "parameters": [
          {
            "name": "Priority",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project": {
      "get": {
        "description": "returns a list of object with type Project",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project__type": { "type": "string" },
                  "title": { "type": "string" },
                  "key": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "description": { "type": "string" },
                  "lead": { "type": "string" },
                  "issue_type_scheme": { "type": "string" },
                  "workflow_scheme": { "type": "string" },
                  "permission_scheme": { "type": "string" },
                  "role_scheme": { "type": "string" },
                  "role_assignment": { "type": "string" },
                  "status": { "type": "string" },
                  "category": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project/{Project}": {
      "get": {
        "description": "returns a list of object with type Project",
        "parameters": [
          {
            "name": "Project",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project__type": { "type": "string" },
                  "title": { "type": "string" },
                  "key": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "description": { "type": "string" },
                  "lead": { "type": "string" },
                  "issue_type_scheme": { "type": "string" },
                  "workflow_scheme": { "type": "string" },
                  "permission_scheme": { "type": "string" },
                  "role_scheme": { "type": "string" },
                  "role_assignment": { "type": "string" },
                  "status": { "type": "string" },
                  "category": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project",
        "parameters": [
          {
            "name": "Project",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Application%20Type": {
      "get": {
        "description": "returns a list of object with type Project Application Type",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Application%20Type/{Project_Application_Type}": {
      "get": {
        "description": "returns a list of object with type Project Application Type",
        "parameters": [
          {
            "name": "Project_Application_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Application_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Application Type",
        "parameters": [
          {
            "name": "Project_Application_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Attributes": {
      "get": {
        "description": "returns a list of object with type Project Attributes",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "attributes": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Attributes/{Project_Attributes}": {
      "get": {
        "description": "returns a list of object with type Project Attributes",
        "parameters": [
          {
            "name": "Project_Attributes",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Attributes",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "attributes": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Attributes",
        "parameters": [
          {
            "name": "Project_Attributes",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Categories": {
      "get": {
        "description": "returns a list of object with type Project Categories",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Categories/{Project_Categories}": {
      "get": {
        "description": "returns a list of object with type Project Categories",
        "parameters": [
          {
            "name": "Project_Categories",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Categories",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Categories",
        "parameters": [
          {
            "name": "Project_Categories",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Domain": {
      "get": {
        "description": "returns a list of object with type Project Domain",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Domain/{Project_Domain}": {
      "get": {
        "description": "returns a list of object with type Project Domain",
        "parameters": [
          {
            "name": "Project_Domain",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Domain",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Domain",
        "parameters": [
          {
            "name": "Project_Domain",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Permission%20Scheme%20Assignment": {
      "get": {
        "description": "returns a list of object with type Project Permission Scheme Assignment",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "scheme": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Permission%20Scheme%20Assignment/{Project_Permission_Scheme_Assignment}": {
      "get": {
        "description": "returns a list of object with type Project Permission Scheme Assignment",
        "parameters": [
          {
            "name": "Project_Permission_Scheme_Assignment",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Permission_Scheme_Assignment",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "scheme": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Permission Scheme Assignment",
        "parameters": [
          {
            "name": "Project_Permission_Scheme_Assignment",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Platform": {
      "get": {
        "description": "returns a list of object with type Project Platform",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Platform/{Project_Platform}": {
      "get": {
        "description": "returns a list of object with type Project Platform",
        "parameters": [
          {
            "name": "Project_Platform",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Platform",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Platform",
        "parameters": [
          {
            "name": "Project_Platform",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Role": {
      "get": {
        "description": "returns a list of object with type Project Role",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "default_user": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Role/{Project_Role}": {
      "get": {
        "description": "returns a list of object with type Project Role",
        "parameters": [
          {
            "name": "Project_Role",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Role",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "default_user": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Role",
        "parameters": [
          {
            "name": "Project_Role",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Role%20Scheme": {
      "get": {
        "description": "returns a list of object with type Project Role Scheme",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "user_role_mapping": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Role%20Scheme/{Project_Role_Scheme}": {
      "get": {
        "description": "returns a list of object with type Project Role Scheme",
        "parameters": [
          {
            "name": "Project_Role_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Role_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "user_role_mapping": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Role Scheme",
        "parameters": [
          {
            "name": "Project_Role_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Settings": {
      "get": {
        "description": "returns a list of object with type Project Settings",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "work_item_type_scheme": { "type": "string" },
                  "workflow_scheme": { "type": "string" },
                  "permission_scheme": { "type": "string" },
                  "role_assignment": { "type": "string" },
                  "features": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Settings/{Project_Settings}": {
      "get": {
        "description": "returns a list of object with type Project Settings",
        "parameters": [
          {
            "name": "Project_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "work_item_type_scheme": { "type": "string" },
                  "workflow_scheme": { "type": "string" },
                  "permission_scheme": { "type": "string" },
                  "role_assignment": { "type": "string" },
                  "features": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Settings",
        "parameters": [
          {
            "name": "Project_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Status": {
      "get": {
        "description": "returns a list of object with type Project Status",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "icon": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Status/{Project_Status}": {
      "get": {
        "description": "returns a list of object with type Project Status",
        "parameters": [
          {
            "name": "Project_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "icon": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Status",
        "parameters": [
          {
            "name": "Project_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Type": {
      "get": {
        "description": "returns a list of object with type Project Type",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "features": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Project%20Type/{Project_Type}": {
      "get": {
        "description": "returns a list of object with type Project Type",
        "parameters": [
          {
            "name": "Project_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Project_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "features": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Project Type",
        "parameters": [
          {
            "name": "Project_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Release": {
      "get": {
        "description": "returns a list of object with type Release",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "title": { "type": "string" },
                  "status": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Release/{Release}": {
      "get": {
        "description": "returns a list of object with type Release",
        "parameters": [
          {
            "name": "Release",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Release",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "title": { "type": "string" },
                  "status": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Release",
        "parameters": [
          {
            "name": "Release",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Release%20Status": {
      "get": {
        "description": "returns a list of object with type Release Status",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Release%20Status/{Release_Status}": {
      "get": {
        "description": "returns a list of object with type Release Status",
        "parameters": [
          {
            "name": "Release_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Release_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Release Status",
        "parameters": [
          {
            "name": "Release_Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Resource%20Allocation": {
      "get": {
        "description": "returns a list of object with type Resource Allocation",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "user": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "capacity": { "type": "integer" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Resource%20Allocation/{Resource_Allocation}": {
      "get": {
        "description": "returns a list of object with type Resource Allocation",
        "parameters": [
          {
            "name": "Resource_Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Resource_Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "user": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "capacity": { "type": "integer" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Resource Allocation",
        "parameters": [
          {
            "name": "Resource_Allocation",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Role%20User%20Map": {
      "get": {
        "description": "returns a list of object with type Role User Map",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": { "type": "string" },
                  "users": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Role%20User%20Map/{Role_User_Map}": {
      "get": {
        "description": "returns a list of object with type Role User Map",
        "parameters": [
          {
            "name": "Role_User_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Role_User_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": { "type": "string" },
                  "users": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Role User Map",
        "parameters": [
          {
            "name": "Role_User_Map",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Sprint": {
      "get": {
        "description": "returns a list of object with type Sprint",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "status": { "type": "string" },
                  "board": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Sprint/{Sprint}": {
      "get": {
        "description": "returns a list of object with type Sprint",
        "parameters": [
          {
            "name": "Sprint",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Sprint",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "status": { "type": "string" },
                  "board": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Sprint",
        "parameters": [
          {
            "name": "Sprint",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Status": {
      "get": {
        "description": "returns a list of object with type Status",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Status/{Status}": {
      "get": {
        "description": "returns a list of object with type Status",
        "parameters": [
          {
            "name": "Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Status",
        "parameters": [
          {
            "name": "Status",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Log": {
      "get": {
        "description": "returns a list of object with type Time Log",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": { "type": "string" },
                  "date": { "type": "string" },
                  "author": { "type": "string" },
                  "time_log_type": { "type": "string" },
                  "work_item": { "type": "string" },
                  "description": { "type": "string" },
                  "is_billable": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Log/{Time_Log}": {
      "get": {
        "description": "returns a list of object with type Time Log",
        "parameters": [
          {
            "name": "Time_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Time_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": { "type": "string" },
                  "date": { "type": "string" },
                  "author": { "type": "string" },
                  "time_log_type": { "type": "string" },
                  "work_item": { "type": "string" },
                  "description": { "type": "string" },
                  "is_billable": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Time Log",
        "parameters": [
          {
            "name": "Time_Log",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Log%20Type": {
      "get": {
        "description": "returns a list of object with type Time Log Type",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Log%20Type/{Time_Log_Type}": {
      "get": {
        "description": "returns a list of object with type Time Log Type",
        "parameters": [
          {
            "name": "Time_Log_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Time_Log_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "title": { "type": "string" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Time Log Type",
        "parameters": [
          {
            "name": "Time_Log_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Off": {
      "get": {
        "description": "returns a list of object with type Time Off",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "date": { "type": "string" },
                  "type": { "type": "string" },
                  "status": { "type": "string" },
                  "approver": { "type": "string" },
                  "reason": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Time%20Off/{Time_Off}": {
      "get": {
        "description": "returns a list of object with type Time Off",
        "parameters": [
          {
            "name": "Time_Off",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Time_Off",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "date": { "type": "string" },
                  "type": { "type": "string" },
                  "status": { "type": "string" },
                  "approver": { "type": "string" },
                  "reason": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Time Off",
        "parameters": [
          {
            "name": "Time_Off",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/User%20Competencies": {
      "get": {
        "description": "returns a list of object with type User Competencies",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "project_role": { "type": "string" },
                  "language": { "type": "string" },
                  "lang_prof": { "type": "string" },
                  "domain_prof": { "type": "string" },
                  "task_experience": { "type": "string" },
                  "experience_level": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/User%20Competencies/{User_Competencies}": {
      "get": {
        "description": "returns a list of object with type User Competencies",
        "parameters": [
          {
            "name": "User_Competencies",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "User_Competencies",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "project_role": { "type": "string" },
                  "language": { "type": "string" },
                  "lang_prof": { "type": "string" },
                  "domain_prof": { "type": "string" },
                  "task_experience": { "type": "string" },
                  "experience_level": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type User Competencies",
        "parameters": [
          {
            "name": "User_Competencies",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item": {
      "get": {
        "description": "returns a list of object with type Work Item",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "type": { "type": "string" },
                  "priority": { "type": "string" },
                  "status": { "type": "string" },
                  "key": { "type": "string" },
                  "title": { "type": "string" },
                  "parent_work_item": { "type": "string" },
                  "description": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "story_point": { "type": "integer" },
                  "rolled_up_story_point": { "type": "integer" },
                  "sprint": { "type": "string" },
                  "assignee": { "type": "string" },
                  "passignee": { "type": "string" },
                  "sassignee": { "type": "string" },
                  "estimate_effort": { "type": "string" },
                  "watchers": { "type": "string" },
                  "estimated_story_point": { "type": "integer" },
                  "affects_releases": { "type": "string" },
                  "fixed_releases": { "type": "string" },
                  "modules": { "type": "string" },
                  "reporter": { "type": "string" },
                  "key_no": { "type": "integer" },
                  "logged_time": { "type": "string" },
                  "remaining_time": { "type": "string" },
                  "actual_start_date": { "type": "string" },
                  "completion_date": { "type": "string" },
                  "is_milestone": { "type": "string" },
                  "rank": { "type": "string" },
                  "milestones": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item/{Work_Item}": {
      "get": {
        "description": "returns a list of object with type Work Item",
        "parameters": [
          {
            "name": "Work_Item",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "type": { "type": "string" },
                  "priority": { "type": "string" },
                  "status": { "type": "string" },
                  "key": { "type": "string" },
                  "title": { "type": "string" },
                  "parent_work_item": { "type": "string" },
                  "description": { "type": "string" },
                  "start_date": { "type": "string" },
                  "end_date": { "type": "string" },
                  "story_point": { "type": "integer" },
                  "rolled_up_story_point": { "type": "integer" },
                  "sprint": { "type": "string" },
                  "assignee": { "type": "string" },
                  "passignee": { "type": "string" },
                  "sassignee": { "type": "string" },
                  "estimate_effort": { "type": "string" },
                  "watchers": { "type": "string" },
                  "estimated_story_point": { "type": "integer" },
                  "affects_releases": { "type": "string" },
                  "fixed_releases": { "type": "string" },
                  "modules": { "type": "string" },
                  "reporter": { "type": "string" },
                  "key_no": { "type": "integer" },
                  "logged_time": { "type": "string" },
                  "remaining_time": { "type": "string" },
                  "actual_start_date": { "type": "string" },
                  "completion_date": { "type": "string" },
                  "is_milestone": { "type": "string" },
                  "rank": { "type": "string" },
                  "milestones": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item",
        "parameters": [
          {
            "name": "Work_Item",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Column%20Filter": {
      "get": {
        "description": "returns a list of object with type Work Item Column Filter",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "system": { "type": "string" },
                  "label": { "type": "string" },
                  "fieldname": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Column%20Filter/{Work_Item_Column_Filter}": {
      "get": {
        "description": "returns a list of object with type Work Item Column Filter",
        "parameters": [
          {
            "name": "Work_Item_Column_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Column_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "system": { "type": "string" },
                  "label": { "type": "string" },
                  "fieldname": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Column Filter",
        "parameters": [
          {
            "name": "Work_Item_Column_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Events": {
      "get": {
        "description": "returns a list of object with type Work Item Events",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "event_field_type": { "type": "string" },
                  "event_field_name": { "type": "string" },
                  "event_field_label": { "type": "string" },
                  "show_fields": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Events/{Work_Item_Events}": {
      "get": {
        "description": "returns a list of object with type Work Item Events",
        "parameters": [
          {
            "name": "Work_Item_Events",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Events",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": { "type": "string" },
                  "event_field_type": { "type": "string" },
                  "event_field_name": { "type": "string" },
                  "event_field_label": { "type": "string" },
                  "show_fields": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Events",
        "parameters": [
          {
            "name": "Work_Item_Events",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Filter": {
      "get": {
        "description": "returns a list of object with type Work Item Filter",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "owner": { "type": "string" },
                  "filter": { "type": "string" },
                  "filter_owner": { "type": "string" },
                  "share_with": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Filter/{Work_Item_Filter}": {
      "get": {
        "description": "returns a list of object with type Work Item Filter",
        "parameters": [
          {
            "name": "Work_Item_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "owner": { "type": "string" },
                  "filter": { "type": "string" },
                  "filter_owner": { "type": "string" },
                  "share_with": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Filter",
        "parameters": [
          {
            "name": "Work_Item_Filter",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Link": {
      "get": {
        "description": "returns a list of object with type Work Item Link",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "link_type": { "type": "string" },
                  "inward": { "type": "string" },
                  "inward_link": { "type": "string" },
                  "outward": { "type": "string" },
                  "outward_link": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Link/{Work_Item_Link}": {
      "get": {
        "description": "returns a list of object with type Work Item Link",
        "parameters": [
          {
            "name": "Work_Item_Link",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Link",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "link_type": { "type": "string" },
                  "inward": { "type": "string" },
                  "inward_link": { "type": "string" },
                  "outward": { "type": "string" },
                  "outward_link": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Link",
        "parameters": [
          {
            "name": "Work_Item_Link",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Tree": {
      "get": {
        "description": "returns a list of object with type Work Item Tree",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "level": { "type": "integer" },
                  "work_item_type": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Tree/{Work_Item_Tree}": {
      "get": {
        "description": "returns a list of object with type Work Item Tree",
        "parameters": [
          {
            "name": "Work_Item_Tree",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Tree",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "level": { "type": "integer" },
                  "work_item_type": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Tree",
        "parameters": [
          {
            "name": "Work_Item_Tree",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Type": {
      "get": {
        "description": "returns a list of object with type Work Item Type",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "lft": { "type": "integer" },
                  "rgt": { "type": "integer" },
                  "is_group": { "type": "string" },
                  "is_child": { "type": "string" },
                  "old_parent": { "type": "string" },
                  "parent_work_item_type": { "type": "string" },
                  "icon": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Item%20Type/{Work_Item_Type}": {
      "get": {
        "description": "returns a list of object with type Work Item Type",
        "parameters": [
          {
            "name": "Work_Item_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Item_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "lft": { "type": "integer" },
                  "rgt": { "type": "integer" },
                  "is_group": { "type": "string" },
                  "is_child": { "type": "string" },
                  "old_parent": { "type": "string" },
                  "parent_work_item_type": { "type": "string" },
                  "icon": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Item Type",
        "parameters": [
          {
            "name": "Work_Item_Type",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Schedule": {
      "get": {
        "description": "returns a list of object with type Work Schedule",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "work_day": { "type": "string" },
                  "capacity": { "type": "integer" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Work%20Schedule/{Work_Schedule}": {
      "get": {
        "description": "returns a list of object with type Work Schedule",
        "parameters": [
          {
            "name": "Work_Schedule",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Work_Schedule",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "work_day": { "type": "string" },
                  "capacity": { "type": "integer" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Work Schedule",
        "parameters": [
          {
            "name": "Work_Schedule",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Condition": {
      "get": {
        "description": "returns a list of object with type Workflow Condition",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workflow": { "type": "string" },
                  "rule": { "type": "string" },
                  "user_multiselect": { "type": "string" },
                  "workflow_project_role_multiselect": { "type": "string" },
                  "field_name": { "type": "string" },
                  "state": { "type": "string" },
                  "action": { "type": "string" },
                  "next_state": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Condition/{Workflow_Condition}": {
      "get": {
        "description": "returns a list of object with type Workflow Condition",
        "parameters": [
          {
            "name": "Workflow_Condition",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Workflow_Condition",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workflow": { "type": "string" },
                  "rule": { "type": "string" },
                  "user_multiselect": { "type": "string" },
                  "workflow_project_role_multiselect": { "type": "string" },
                  "field_name": { "type": "string" },
                  "state": { "type": "string" },
                  "action": { "type": "string" },
                  "next_state": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Workflow Condition",
        "parameters": [
          {
            "name": "Workflow_Condition",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Issue%20Type%20Mapping": {
      "get": {
        "description": "returns a list of object with type Workflow Issue Type Mapping",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "is_system": { "type": "string" },
                  "work_item_type": { "type": "string" },
                  "workflow": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Issue%20Type%20Mapping/{Workflow_Issue_Type_Mapping}": {
      "get": {
        "description": "returns a list of object with type Workflow Issue Type Mapping",
        "parameters": [
          {
            "name": "Workflow_Issue_Type_Mapping",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Workflow_Issue_Type_Mapping",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "is_system": { "type": "string" },
                  "work_item_type": { "type": "string" },
                  "workflow": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Workflow Issue Type Mapping",
        "parameters": [
          {
            "name": "Workflow_Issue_Type_Mapping",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Scheme": {
      "get": {
        "description": "returns a list of object with type Workflow Scheme",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "mapping": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Workflow%20Scheme/{Workflow_Scheme}": {
      "get": {
        "description": "returns a list of object with type Workflow Scheme",
        "parameters": [
          {
            "name": "Workflow_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Workflow_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "mapping": { "type": "string" },
                  "is_system": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Workflow Scheme",
        "parameters": [
          {
            "name": "Workflow_Scheme",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Zymmr%20Query%20Builder": {
      "get": {
        "description": "returns a list of object with type Zymmr Query Builder",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "title": { "type": "string" },
                  "is_native_query": { "type": "string" },
                  "tables": { "type": "string" },
                  "columns": { "type": "string" },
                  "filters": { "type": "string" },
                  "limit": { "type": "integer" },
                  "sql": { "type": "string" },
                  "row_count": { "type": "integer" },
                  "execution_time_seconds": { "type": "string" },
                  "last_executed_on": { "type": "string" },
                  "column_order": { "type": "string" },
                  "share_with": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Zymmr%20Query%20Builder/{Zymmr_Query_Builder}": {
      "get": {
        "description": "returns a list of object with type Zymmr Query Builder",
        "parameters": [
          {
            "name": "Zymmr_Query_Builder",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Zymmr_Query_Builder",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "title": { "type": "string" },
                  "is_native_query": { "type": "string" },
                  "tables": { "type": "string" },
                  "columns": { "type": "string" },
                  "filters": { "type": "string" },
                  "limit": { "type": "integer" },
                  "sql": { "type": "string" },
                  "row_count": { "type": "integer" },
                  "execution_time_seconds": { "type": "string" },
                  "last_executed_on": { "type": "string" },
                  "column_order": { "type": "string" },
                  "share_with": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Zymmr Query Builder",
        "parameters": [
          {
            "name": "Zymmr_Query_Builder",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Zymmr%20System%20Settings": {
      "get": {
        "description": "returns a list of object with type Zymmr System Settings",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          },
          {
            "name": "oder_by",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "description": "discription POST",
        "parameters": [],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "working_hrs_per_day": { "type": "integer" },
                  "working_days_per_week": { "type": "integer" },
                  "time_display_format": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/resource/Zymmr%20System%20Settings/{Zymmr_System_Settings}": {
      "get": {
        "description": "returns a list of object with type Zymmr System Settings",
        "parameters": [
          {
            "name": "Zymmr_System_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "patch": {
        "description": "discription POST",
        "parameters": [
          {
            "name": "Zymmr_System_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "discription requestBody POST",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "working_hrs_per_day": { "type": "integer" },
                  "working_days_per_week": { "type": "integer" },
                  "time_display_format": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plant" }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "description": "returns a list of object with type Zymmr System Settings",
        "parameters": [
          {
            "name": "Zymmr_System_Settings",
            "in": "path",
            "description": "domain of your zymmr instance",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plant" }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "array",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          }
        }
      },
      "Plant2": {
        "required": ["fields"],
        "type": "string",
        "properties": {}
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
